stages:
  - notice
  - check
  - build
  - publish

default:
  cache:
    paths:
      - out/

variables:
  PATH: /usr/local/sonar-scanner/sonar-scanner-4.4.0.2170-linux/bin:/usr/local/bin:/usr/local/sbin:/usr/sbin:/usr/bin:/data/golang/go/bin/:/root/go/bin
  GOROOT: /data/golang/go
  GOPROXY: https://goproxy.cn
  APP: apinto
  VERSION: $CI_COMMIT_SHORT_SHA
  DEV_SERVER: root@172.18.189.43

feishu-informer: # 飞书回调
  stage: notice
  variables:
    DIFF_URL: "$CI_MERGE_REQUEST_PROJECT_URL/-/merge_requests/$CI_MERGE_REQUEST_IID/diffs"
  rules:
    - if: $CI_PIPELINE_SOURCE=="merge_request_event"
  script:
    - |
      curl -X POST -H "Content-Type: application/json" \
      -d "{\"msg_type\":\"text\",\"content\":{\"text\":\"项目：${CI_PROJECT_NAME}\\n提交人：${GITLAB_USER_NAME}\\n提交信息：${CI_MERGE_REQUEST_TITLE}\\n合并分支信息：${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME} -> ${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}\\n差异性地址：${DIFF_URL}\\n请及时review代码\"}}" \
      https://open.feishu.cn/open-apis/bot/v2/hook/1c334752-2874-41a1-8f1b-3060f2d46b6c
checker:
  stage: check
  rules:
    - if: $CI_COMMIT_BRANCH=="develop"
  script:
    - set +e
    - go mod tidy
    - go test -covermode=atomic -coverpkg=./... -coverprofile=coverage.data -timeout=1m ./...
    - golangci-lint run --timeout=3m --out-format checkstyle --issues-exit-code 0 ./... > report.xml
    - sonar-scanner
builder:
  stage: build
  script:
    - sed -i '/replace github.com\/eolinker\/eosc => */d' go.mod
    - go mod tidy
    - cd build/cmd && ./package.sh $VERSION
dev-publish:
  stage: publish
  dependencies:
    - builder
  variables:
    SAVE_DIR: /opt/apinto
    APP_PRE: ${APP}-${VERSION}
  script:
    - scp out/${APP_PRE}.linux.x64.tar.gz ${DEV_SERVER}:${SAVE_DIR}
    - ssh ${DEV_SERVER} "cd ${SAVE_DIR}; mkdir -p ${APP_PRE};tar -zxvf ${APP_PRE}.linux.x64.tar.gz -C ${APP_PRE};cd ${APP_PRE}/${APP}; ./install.sh install"
  when: on_success